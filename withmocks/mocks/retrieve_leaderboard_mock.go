// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aranw/dont-need-mocks-example/withmocks (interfaces: LeaderboardRetriever)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/retrieve_leaderboard_mock.go -package=mocks . LeaderboardRetriever
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	withmocks "github.com/aranw/dont-need-mocks-example/withmocks"
	gomock "go.uber.org/mock/gomock"
)

// MockLeaderboardRetriever is a mock of LeaderboardRetriever interface.
type MockLeaderboardRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockLeaderboardRetrieverMockRecorder
}

// MockLeaderboardRetrieverMockRecorder is the mock recorder for MockLeaderboardRetriever.
type MockLeaderboardRetrieverMockRecorder struct {
	mock *MockLeaderboardRetriever
}

// NewMockLeaderboardRetriever creates a new mock instance.
func NewMockLeaderboardRetriever(ctrl *gomock.Controller) *MockLeaderboardRetriever {
	mock := &MockLeaderboardRetriever{ctrl: ctrl}
	mock.recorder = &MockLeaderboardRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLeaderboardRetriever) EXPECT() *MockLeaderboardRetrieverMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockLeaderboardRetriever) Get(arg0 context.Context) ([]withmocks.Score, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].([]withmocks.Score)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockLeaderboardRetrieverMockRecorder) Get(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockLeaderboardRetriever)(nil).Get), arg0)
}
